<f:view xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:ng="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:prime="http://primefaces.org/ui"
	xmlns:ac="http://beyondjava.net/angularFacesCore"
	>
	<h:head />
	<h:body>
		<h:form id="formID" ng-app="AngularFacesExamples" ng-controller="MyCtrl" prependId="false">
			<h2>Welcome to AngularFaces 2.0!</h2>
    		Based firmly in the future...
			<prime:panel colspan="2" header="This is a JSF view enriched by an AngularJS bean" id="myPanel">
				<prime:panelGrid columns="3" id="angular">
					<prime:inputText value="{{calculatorBean.number1}}" label="number 1" />
					<prime:inputText value="{{calculatorBean.number2}}"/>
					<prime:inputText value="{{calculatorBean.result}}"
						label="#{calculatorBean.resultCaption}" />
					<prime:inputText value="{{calculatorBean.serverSideResult}}" />
					<prime:inputText value="{{calculatorBean.randomNumberFromServer}}" />
					<prime:commandButton value="Add on server (JSF AJAX)"
						action="#{calculatorBean.add}" update="@form" process="@form"/>
				</prime:panelGrid>
				<prime:messages globalOnly="false" />
				The PrimeFaces version uses a special oncomplete handler to reactivate AngularJS after a traditional JSF request.
			</prime:panel>
    		<prime:panel colspan="2" header="{{calculatorBean.headerText}}"
				style="{{calculatorBean.gridStyle}}">
				The header text is set both by the JSF bean and the AngularJS controller. The header style is set by an AngularJS watch.
			</prime:panel>
			<prime:panel colspan="2" header="pure AngularJS">
				<h:outputText style="{{angularModelStyle}}"
					value="This text has a css style that stems from the Angular model, but not from any JSF bean." />
			</prime:panel>
		</h:form>
	</h:body>
</f:view>
